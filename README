------------------------------------------------------------------------------------
Assignment 6: Socket Hiding
------------------------------------------------------------------------------------
Credits
    Nicolas Appel
    Wenwen Chen
------------------------------------------------------------------------------------
Description
    - Hide the UDP/TCP sockets from users. 
    - Sockets to be hidden can be speified by passing ports:
      - ports_TCP=...,...
      - ports_UDP=...,...
------------------------------------------------------------------------------------
Documentation
------------------------------------------------------------------------------------
Installation instructions
    - Compile the module
      # make
    - Insert the module
      # insmod rootkit.ko [ports_TCP=...,... ports_UDP=...,...]
    - Remove the module
      # rmmod rootkit    
    - Look up TCP sockets
      $ ss -t
      or
      $ netstat -t
    - Look up UDP sockets
      $ ss -u
      or
      $ netstat -u
-----------------------------------------------------------------------------------
Technical note
  - Work flow of netstat
	  - Acquire TCP socket information: read /proc/net/tcp
	  - Acquire UDP socket information: read /proc/net/udp
  - Work flow of ss
	  - Acquire TCP socket information: use netlink socket and syscall sendmsg/recvmsg
	  - Acquire UDP socket information: read /proc/net/udp
  - File tcp/udp
    - The file tcp/udp is a sequence file (seq_file)
    - Socket addresses and ports are stored in hex 
    - Row length of the tcp file is 150
    - Row length of the udp file is 128
    - A seq_file has four seq_operations:
      - start()
        initialize the file to the begining
      - stop()
        close the file
      - next() 
        go to the next record in file
      - show() 
        fill buffer of seq_file with one text row
        This function is interesting for us to hide sockets
-----------------------------------------------------------------------------------
Implementation Details
  - Hook seq_operation show()
    - Get tcp_seq_afinfo from data under the path "/proc/net/tcp" and "/proc/net/udp" 
    - Store the origin show() from seq_ops.show and rewrite it
    - The show() of a seq file is defined: int show(struct seq_file * seq, void * v);
      (v is actually a pointer to a sock structure)
    - If one of given ports are appeared in a row, then shift the count of seq_file
  - Hook syscall recvmsg
    - Store the origin sys_recvmsg from syscall_table and rewrite it
    - Check if the current socket (using file description number) is netlink. 
    - Go through the netlink messages (struct nlmsghdr), wenn one of given ports 
      is source/destination port of the message, shift the following messages to 
      override the message and reduce the return value (the number of received bytes)
-----------------------------------------------------------------------------------
Additional Notes
  - Wenn removing all recvmsg information and return 0. ss will print EOF on netlink
