------------------------------------------------------------------------------------
Assignment 2: System Call Hooking
------------------------------------------------------------------------------------
Credits
    Nicolas Appel
    Wenwen Chen
------------------------------------------------------------------------------------
Description
    - Hook the read system call and output the intercepted data when reading from stdin. This
output should be printed via printk. The interception should work by replacing the func-
tion pointer in the system call table, then passing control back to the original system call
handler.

------------------------------------------------------------------------------------
Documentation
------------------------------------------------------------------------------------
Installation instructions
    - Compile the module
      # make
    - Clean project
      # make clean
    - View the information of mod.ko
      # modinfo mod.ko
    - Load mod.ko
      # insmod mod.ko
    - View currently loaded kernel modules in the system
      # lsmod
    - Unload mod.ko
      # rmmod mod
------------------------------------------------------------------------------------
Implementation Detail
    - enable_wp() and disable_wp() dis-/enable memory write protection by flipping the WP bit in CPU register CR0
    - my_read() hook function, intercepts all read calls that affect stdin. Uses a buffer of variable size to escape
      the buffer that was passed by the caller. Uses r_count as semaphore so mod_exit can block until the function
      is not used anymore.
    - mod_exit() undoes all changes to the system call table and frees the memory used by my_read. Additionally,
      this function prevents errors by blocking module removal until every my_read call has finished. It does so by
      checking the reference counter r_count and printing '\n' until all blocking read calls return.
------------------------------------------------------------------------------------
Additional Notes

It might be necessary to stop the rsyslog daemon in order to unload the module.
Measures were taken to prevent this behavior and should generally not fail.
------------------------------------------------------------------------------------
Questions
   - Is there a more efficient way to escape the read buffer? E.g. Printing only a certain amount of bytes
